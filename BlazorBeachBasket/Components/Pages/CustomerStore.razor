@page "/customerstore/{CustId:int}/{RestId:int}"
@rendermode InteractiveServer
@inject NavigationManager nav

@using Db
<head>
    <PageTitle>@curRest.RestaurantName</PageTitle>
    <link rel="stylesheet" href="CustomerStore.css" />
</head>


<div class="container">
    <div class="max-w-screen-md mx-auto">
        <!-- Logo -->
        <div class="text-center p-4">
            <h1>@curRest.RestaurantName</h1>
            <img src="@curRest.Restaurant_img_link" alt="Logo2">
        </div>

    </div>
</div>

<!-- Header -->
<div class="header">
    <h1>@curRest.RestaurantAddress</h1>
    <div class="info-container">
        <span class="info-item">4.8 Rating</span>
        <span class="info-item">4-6 min Delivery</span>
        <span class="info-item">987 Reviews</span>
    </div>
</div>
<!-- Promotion Banner -->
<div class="promotion-banner">
    <p class="text-red-500 font-bold">@banner</p>
</div>



<div class="modal" tabindex="-1" style="display: @modalDisplay">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Checkout</h5>
                <button type="button" class="close" @onclick="CloseModal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table table-borderless">
                    <tbody>
                        @foreach (var group in Cart.GroupBy(item => item.ItemName))
                        {
                            <tr>
                                <td>
                                    @if (group.Count() > 1)
                                    {
                                        <span>@group.Key - x @group.Count() - £@((group.First().ItemPrice * group.Count()).ToString("0.00"))</span>
                                    }
                                    else
                                    {
                                        <span>@group.Key - £@group.First().ItemPrice</span>
                                    }
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-primary" style="background-color:black" @onclick="() => modalAddItem(group.First())">+</button>
                                </td>
                                <td>-</td>
                                <td>
                                    <button class="btn btn-sm btn-danger" @onclick="() => modalRemoveItem(group.First())">-</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-dark" @onclick="ProceedToCheckout">Proceed to Checkout</button>
                <button type="button" class="btn btn-secondary" @onclick="CloseModal">Close</button>
            </div>
        </div>
    </div>
</div>


<div class="product-grid">
    @foreach (MenuItem menuItem in curRest.Rest_Menu)
    {
        <div class="product-card">
            <img src="@menuItem.Item_Image" alt="Product Image">
            <h2>@menuItem.ItemName</h2>
            <p>GBP £@menuItem.ItemPrice</p>
            <button class="btn" type="button" @onclick="() => AddToCart(menuItem)">Add to Cart</button>
        </div>
    }
</div>



<div style="text-align: center; margin-top: 20px;">
    <div style="display: inline-block; background-color: black; padding: 10px; border-radius: 5px;">
        <a style="color: white; text-decoration: none;">
            <img src="Images/icon.png" width="30px;" style="vertical-align: middle;" />
            <span style="vertical-align: middle;">  @CartCount</span>
        </a>
        <button type="button" class="btn btn-dark" style="margin-left: 10px;" @onclick="@ShowModal">ViewBasket</button>
    </div>
</div>

<footer>
    <div>
        <h3>Discover @curRest.RestaurantName</h3>
        <ul>

            <li><a href="#">About us</a></li>

        </ul>
    </div>
    <div>
        <h3>Newsroom</h3>
        <ul>
            <li><a href="#">Help</a></li>
            <li><a href="#">Contact</a></li>
            <li><a href="#">FAQs</a></li>
            <li><a href="#">Privacy</a></li>
            <li><a href="#">Cookies</a></li>
        </ul>
    </div>
    <div>
        <h3>Careers</h3>
        <ul>
            <li><a href="#">Restaurant signup</a></li>
            <li><a href="#">Become a rider</a></li>
            <li><a href="#">Legal</a></li>
            <li><a href="#">Terms and conditions</a></li>


        </ul>
    </div>
</footer>


@code {
    [Parameter]
    public int CustId { get; set; }   
    [Parameter]
    public int RestId { get; set; }

    Customer customer;
    Restaurant curRest;
    Database database = new Database();

    string banner;
    int CartCount = 0;
    List<MenuItem> Cart = new List<MenuItem>();

    bool isCartEmpty => CartCount == 0;
    void AddToCart(MenuItem menuItem)
    {
        Cart.Add(menuItem);
        CartCount++;
    }

    public string modalDisplay = "none";
    void ShowModal()
    {
        modalDisplay = "block";
    }
    void CloseModal()
    {
        modalDisplay = "none";
    }
    void ProceedToCheckout()
    {
        if (Cart.Count > 0)
        {
            // Show the new modal for user information
            ToCheckOut();
        }
        else
        {

        }
    }
    string userInfoModalDisplay = "none";

    void modalAddItem(MenuItem item)
    {
        Cart.Add(item);
    }
    void modalRemoveItem(MenuItem item)
    {
        Cart.Remove(item);
    }
    void ToCheckOut()
    {
        double ordercost = 0;
        string ItemIds = "";
        foreach (MenuItem menuItem in Cart)
        {
            ordercost += menuItem.ItemPrice;
            ItemIds += menuItem.ItemId.ToString() + " ";
        }
        Order neworder = new Order(database.Orders.Last().orderId + 1, ordercost, ItemIds, "Preparing", RestId, CustId, database.Drivers[0].DriverId);
        database.Orders.Add(neworder);
        nav.NavigateTo($"/customercheckout/{neworder.orderId}");
    }

    protected override void OnInitialized()
    {
        database.ImportData();
        database.AssingData();
        customer = database.Customers.FirstOrDefault(o => o.CustomerId == CustId);
        curRest = database.Restaurants.FirstOrDefault(o => o.RestaurantId == RestId);
        switch (RestId)
        {
            case 0:
                banner = "Grab the Foodie Bonus with 15% Off!";
                break;
            case 1:
                banner = "DISCOVER OUR NEW ICE CREAM FLAVORS - GET 15% OFF";
                break;
            case 2:
                banner = "FREE DRINK ON US IF YOU ARE PART OF THE LOCAL TEAM!!!!";
                break;
            case 3:
                banner = "";
                break;
            case 4:
                banner = "20 DAYS MONEY BACK GARUNTEE!!";
                break;
            case 5:
                banner = "";
                break;
        }
    }

}
